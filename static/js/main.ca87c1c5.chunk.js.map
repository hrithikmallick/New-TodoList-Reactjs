{"version":3,"sources":["components/ToDos.js","App.js","reportWebVitals.js","index.js"],"names":["ToDos","props","className","aria-hidden","onClick","onSelect","id","text","App","inList","useState","todo","settodo","localStorage","getItem","JSON","parse","list","setlist","btnSave","event","preventDefault","oldItems","deleteItem","filter","errElm","ind","setItem","stringify","useEffect","onSubmit","type","name","onChange","target","value","placeholder","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAkBeA,EAhBM,SAACC,GACpB,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,mBACEA,UAAU,cACVC,cAAY,OACZC,QAAS,WACPH,EAAMI,SAASJ,EAAMK,OAGzB,6BAAKL,EAAMM,aCwDJC,EAjEI,WACjB,IAEIC,EAFJ,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAIEH,EADoC,OAAlCI,aAAaC,QAAQ,SACd,GAEAC,KAAKC,MAAMH,aAAaC,QAAQ,UAE3C,MAAwBJ,mBAASD,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAIMC,EAAU,SAACC,GACfA,EAAMC,iBACNH,GAAQ,SAACI,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqBX,QAGnBY,EAAa,SAACjB,GAClBY,GAAQ,SAACI,GACP,OAAOA,EAASE,QAAO,SAACC,EAAQC,GAC9B,OAAOA,IAAQpB,QAGnBO,aAAac,QAAQ,QAASZ,KAAKa,UAAUX,KAK/C,OAHAY,qBAAU,WACRhB,aAAac,QAAQ,QAASZ,KAAKa,UAAUX,MAC5C,CAACA,IAEF,mCACE,qBAAKf,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,2CACA,uBACA,uBAAM4B,SAAUX,EAAhB,UACE,uBACEY,KAAK,OACLC,KAAK,OACLC,SA/BO,SAACb,GAClBR,EAAQQ,EAAMc,OAAOC,QA+BXC,YAAY,eAEd,wBAAQhC,QAASe,EAAjB,kBAGF,6BACGF,EAAKoB,KAAI,SAACC,EAASZ,GAClB,OACE,cAAC,EAAD,CAEEpB,GAAIoB,EACJrB,SAAUkB,EACVhB,KAAM+B,GAHDZ,gBC3CRa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca87c1c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ToDos = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"todo_style\">\r\n        <i\r\n          className=\"fa fa-times\"\r\n          aria-hidden=\"true\"\r\n          onClick={() => {\r\n            props.onSelect(props.id);\r\n          }}\r\n        />\r\n        <li>{props.text}</li>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ToDos;\r\n","import \"./css/main.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ToDos from \"./components/ToDos\";\n\nexport const App = () => {\n  const [todo, settodo] = useState();\n\n  let inList;\n  if (localStorage.getItem(\"todos\") === null) {\n    inList = [];\n  } else {\n    inList = JSON.parse(localStorage.getItem(\"todos\"));\n  }\n  const [list, setlist] = useState(inList);\n  const inputEvent = (event) => {\n    settodo(event.target.value);\n  };\n  const btnSave = (event) => {\n    event.preventDefault();\n    setlist((oldItems) => {\n      return [...oldItems, todo];\n    });\n  };\n  const deleteItem = (id) => {\n    setlist((oldItems) => {\n      return oldItems.filter((errElm, ind) => {\n        return ind !== id;\n      });\n    });\n    localStorage.setItem(\"todos\", JSON.stringify(list));\n  };\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(list));\n  }, [list]);\n  return (\n    <>\n      <div className=\"main_div\">\n        <div className=\"center_div\">\n          <br />\n          <h1>ToDo list</h1>\n          <br />\n          <form onSubmit={btnSave}>\n            <input\n              type=\"text\"\n              name=\"todo\"\n              onChange={inputEvent}\n              placeholder=\"Add a Item\"\n            />\n            <button onClick={btnSave}>+</button>\n          </form>\n          {/* <li>{todo}</li> */}\n          <ol>\n            {list.map((itemval, ind) => {\n              return (\n                <ToDos\n                  key={ind}\n                  id={ind}\n                  onSelect={deleteItem}\n                  text={itemval}\n                />\n              );\n            })}\n          </ol>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}